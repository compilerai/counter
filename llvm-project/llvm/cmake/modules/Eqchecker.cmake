find_package(Boost REQUIRED COMPONENTS system iostreams serialization)
find_package(yaml-cpp REQUIRED)
find_program(GIT git)

#set(ARCH_SRC "etfg" CACHE STRING)
#set(ARCH_DST "x64" CACHE STRING)

set(PROFILE_FLAG "")
set(DEBUG_FLAG "-g")
set(OPT "-O3")
#set(LINK_FLAG "-no-pie")
set(LINK_FLAG "")
set(DEFINES "${DEFINES} -DELFIO_HPP") #to disable including /usr/include/elf.h
set(SUPEROPT_DIR "${LLVM_BINARY_DIR}/../../superopt")
string(TOUPPER "${ARCH_SRC}" ARCH_SRC_S)
string(TOUPPER "${ARCH_DST}" ARCH_DST_S)
set(SUPEROPT_RELEVANT_ABUILD "${ARCH_SRC}_${ARCH_DST}")
set(DEFINES "-DARCH_SRC=ARCH_${ARCH_SRC_S} -DARCH_DST=ARCH_${ARCH_DST_S} -DSRC_DST=\\\"${SUPEROPT_RELEVANT_ABUILD}\\\" -DSUPEROPT_DIR=\"\\\"${SUPEROPT_DIR}\\\"\" -DENABLE_MAKE_SHARED")
set(EQ_BINARY_DIR ${SUPEROPT_DIR}/build/${SUPEROPT_RELEVANT_ABUILD})
set(SUPEROPT_BINARY_DIR ${SUPEROPT_DIR}/../binlibs/${SUPEROPT_RELEVANT_ABUILD})
set(third_party_dir "${SUPEROPT_DIR}/build/third_party")
#message(STATUS "eqchecker cmake_c_flags = ${CMAKE_C_FLAGS}")
#message(STATUS "eqchecker cmake_cxx_flags = ${CMAKE_CXX_FLAGS}")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${DEBUG_FLAG} ${PROFILE_FLAG} ${OPT} ${LINK_FLAG} ${DEFINES}")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${DEBUG_FLAG} ${PROFILE_FLAG} ${OPT} ${LINK_FLAG} ${DEFINES}")

set(binutils_ver binutils-2.21)
set(binutils_dir ${third_party_dir}/${binutils_ver})
set(binutils_install_dir ${binutils_dir}-install)
set(binutils_lib ${binutils_install_dir}/lib/libbfd.a ${binutils_install_dir}/lib/libiberty.a)

#set(z3_install /home/sbansal/z3-4.8.4.d6df51951f4c-x64-ubuntu-16.04)
# set(z3_ver z3-4.8.10)
#set(z3_install ${third_party_dir}/z3)
# set(z3_pkgname ${z3_ver}-x64-ubuntu-18.04)
set(z3_ver z3-4.8.14)
set(z3_dir ${third_party_dir}/z3)
set(z3_pkgname ${z3_ver}-x64-glibc-2.31)
set(z3_binpath ${z3_dir}/${z3_pkgname})
#set(z3_include ${z3_binpath}/include)
set(z3_lib ${z3_binpath}/bin)
link_directories(${z3_lib})
link_directories(${binutils_install_dir}/lib)
#link_directories(/usr/local/lib)

INCLUDE_DIRECTORIES(${LLVM_BINARY_DIR}/../../superopt/include)
INCLUDE_DIRECTORIES(${LLVM_BINARY_DIR}/../../superopt/lib)
INCLUDE_DIRECTORIES(${LLVM_BINARY_DIR}/../../superopt/lib/eq)
INCLUDE_DIRECTORIES(${LLVM_BINARY_DIR}/../../superopt/lib/expr)
INCLUDE_DIRECTORIES(${LLVM_BINARY_DIR}/../../superopt/lib/support)
INCLUDE_DIRECTORIES(${LLVM_BINARY_DIR}/../../superopt/build/${SUPEROPT_RELEVANT_ABUILD})


#LINK_DIRECTORIES(${z3_lib})
#LINK_DIRECTORIES(${EQ_BINARY_DIR})

#set(SUPEROPT_LIBS superopt fbgen eqchecker sym_exec rewrite_lib insn tfg graph gsupport exec expr valtag gas support cutils fpu parser z3 -lgmp -lgmpxx ${Boost_LIBRARIES} -ldl ${binutils_lib} -lm -lz -lmagic -lboost_filesystem -lboost_system -lssl -lcrypto)

macro(add_binary_lib libname)
  if (NOT TARGET ${libname})
    add_library(${libname} SHARED IMPORTED GLOBAL)
    set_target_properties(${libname} PROPERTIES IMPORTED_LOCATION ${SUPEROPT_BINARY_DIR}/lib${libname}.a)
  endif()
  list(APPEND SUPEROPT_LIBS ${libname})
  #message(STATUS "SUPEROPT_LIBS=${SUPEROPT_LIBS}")
endmacro()


macro(add_superopt_lib libname)
  if (NOT TARGET ${libname})
    add_library(${libname} SHARED IMPORTED GLOBAL)
    set_target_properties(${libname} PROPERTIES IMPORTED_LOCATION ${EQ_BINARY_DIR}/lib${libname}.a)
  endif()
  list(APPEND SUPEROPT_LIBS ${libname})
  #message(STATUS "SUPEROPT_LIBS=${SUPEROPT_LIBS}")
endmacro()

set(jemalloc_ver jemalloc)
set(jemalloc_dir ${third_party_dir}/${jemalloc_ver})
set(jemalloc_install_dir ${third_party_dir}/${jemalloc_ver}-install)
set(libjemalloc_file ${jemalloc_install_dir}/lib/libjemalloc.a)

macro(add_superopt_libs ret)
  add_binary_lib(superopt)
  add_binary_lib(fbgen)
  add_binary_lib(eqchecker)
  add_binary_lib(sym_exec)
  add_binary_lib(rewrite_lib)
  add_binary_lib(insn)
  add_binary_lib(ptfg)
  add_binary_lib(tfg)
  add_binary_lib(graph)
  add_binary_lib(gsupport)
  add_binary_lib(exec)
  add_binary_lib(expr)
  add_binary_lib(valtag)
  add_binary_lib(gas)
  add_binary_lib(support)
  add_superopt_lib(cutils)
  add_superopt_lib(fpu)
  add_superopt_lib(parser)
  set(SUPEROPT_THIRD_PARTY_LIBS  z3 ${libjemalloc_file} -lgmp -lgmpxx ${Boost_LIBRARIES} -ldl ${binutils_lib} -lm -lz -lmagic -lboost_filesystem -lboost_system -lssl -lcrypto -lyaml-cpp -lpthread)
  set(${ret} ${SUPEROPT_LIBS} ${SUPEROPT_THIRD_PARTY_LIBS})
endmacro()
