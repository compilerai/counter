ENTRY:
=etfg_insn {{{
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
=tfg_edge.te_comment
-1:INVALID:0:-1:jump_to_pcrel

=comment
address_taken_local_var_callee:1
}}}
=etfg_insn jump_to_pcrel {{{
=tfg_edge: L0%1%0 => E0%0%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=tfg_edge.te_comment
-1:INVALID:0:-1:jump_to_pcrel

=pcrel_val
0
=pcrel_tag
tag_var
=comment
branch:1
}}}
--
live : exr0.0[0xffffffff],#
memlive : true
--
in_tmap:
exvr0.1 : exvr0.0D
out_tmap.0:
exvr0.0 : exvr0.0D
--
=fixed_reg_mappings begin
=fixed_reg_mappings end
--
.i0: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn {{{
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
=tfg_edge.te_comment
-1:INVALID:0:-1:jump_to_pcrel

=comment
address_taken_local_var_callee:1
}}}
=etfg_insn jump_to_pcrel {{{
=tfg_edge: L0%1%0 => E0%0%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=tfg_edge.te_comment
-1:INVALID:0:-1:jump_to_pcrel

=pcrel_val
0
=pcrel_tag
tag_var
=comment
branch:1
}}}
--
live : exr0.0[0xffffffff],#
memlive : true
--
in_tmap:
exvr0.1 : MEMLOC0x0
out_tmap.0:
exvr0.0 : MEMLOC0x0
--
=fixed_reg_mappings begin
=fixed_reg_mappings end
--
.i0: jmp .NEXTPC0x0 #
==

#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L0%1%1 => L0%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : input.src.exreg.0.1 : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#address_taken_local_var_callee:1
#--
#live : exr0.0[0xffffffff],#
#memlive : true
#--
#in_tmap:
#exvr0.1 : MEMLOC0x0
#out_tmap.0:
#exvr0.0 : MEMLOC0x0
#--
#fixed_reg_mappings
#--
#.i0: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L0%1%1 => L0%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : input.src.exreg.0.1 : BV:32
#2 : input.src.exreg.0.2 : BV:32
#3 : bvadd(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#add_i32:1
#--
#live : exr0.0[0xffffffff], exr0.1[0xffffffff],#
#memlive : false
#--
#in_tmap:
#exvr0.1 : exvr0.0D
#exvr0.2 : exvr0.1D
#out_tmap.0:
#exvr0.0 : exvr0.1S
#exvr0.1 : exvr0.0D
#--
#fixed_reg_mappings
#--
#.i0: leal %exvr4.0w:0x0(%exvr0.0d,%exvr0.1d,1),%exvr0.1d #
#.i1: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L0%1%1 => L0%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : input.src.exreg.0.1 : BV:32
#2 : input.src.exreg.0.2 : BV:32
#3 : bvadd(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#add_i32:1
#--
#live : exr0.0[0xffffffff], exr0.2[0xffffffff],#
#memlive : false
#--
#in_tmap:
#exvr0.1 : exvr0.0D
#exvr0.2 : exvr0.1D
#out_tmap.0:
#exvr0.0 : exvr0.0S
#exvr0.2 : exvr0.1D
#--
#fixed_reg_mappings
#--
#.i0: leal %exvr4.0w:0x0(%exvr0.0d,%exvr0.1d,1),%exvr0.0d #
#.i1: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L0%1%1 => E0%0%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.2.0
#1 : input.src.exreg.0.0 : BV:32
#=src.exreg.3.0
#1 : input.src.exreg.3.0 : BV:32
#2 : input.src.exreg.1.0 : BV:32
#3 : bvxor(1, 2) : BV:32
#4 : input.src.exreg.1.1 : BV:32
#5 : bvxor(3, 4) : BV:32
#6 : input.src.exreg.1.2 : BV:32
#7 : bvxor(5, 6) : BV:32
#8 : input.src.exreg.1.3 : BV:32
#9 : bvxor(7, 8) : BV:32
#=src.llvm-indir_tgt
#1 : retaddr_const : BV:32
#=comment
#ret1:1
#--
#live : exr0.0[0xffffffff], exr1.0[0xffffffff], exr1.1[0xffffffff], exr1.2[0xffffffff], exr1.3[0xffffffff],#
#memlive : false
#--
#in_tmap:
#exvr0.0 : exvr0.0D
#exvr1.0 : exvr0.3S
#exvr1.1 : exvr0.5S
#exvr1.2 : exvr0.6S
#exvr1.3 : exvr0.7S
#out_tmap.0:
#exvr0.0 : exvr0.0D
#exvr1.0 : exvr0.3S
#exvr1.1 : exvr0.5S
#exvr1.2 : exvr0.6S
#exvr1.3 : exvr0.7S
#--
#fixed_reg_mappings
#0 : 4 : 4
#--
#.i0: retl  #%exvr0.4d,%exvr4.2,%exvr0.2d,%exvr0.0d,%exvr0.7d,%exvr0.6d,%exvr0.5d,%exvr0.3d
#==
#
#ENTRY:
#=etfg_insn
#=precondition.0
#=Comment
#undef-behaviour-shiftcount-assume
#=Status
#A
#=LocalSprelAssumptions:
#=Guard
#(epsilon)
#=LhsExpr
#1 : input.src.exreg.0.0 : BV:32
#2 : 32 : INT
#3 : isshiftcount(1, 2) : BOOL
#=RhsExpr
#1 : 1 : BOOL
#=tfg_edge
#L0%1%1 => L0%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.1
#1 : input.src.exreg.0.2 : BV:32
#2 : input.src.exreg.0.0 : BV:32
#3 : bvshl(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#shl:1
#--
#live : exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff],#
#memlive : false
#--
#in_tmap:
#exvr0.0 : exvr0.3D
#exvr0.2 : exvr0.1D
#out_tmap.0:
#exvr0.0 : exvr0.3D
#exvr0.1 : exvr0.2S
#exvr0.2 : exvr0.1D
#--
#fixed_reg_mappings
#--
#.i0: shlxl %exvr0.3d,%exvr0.1d,%exvr0.2d #
#.i1: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=precondition.0
#=Comment
#undef-behaviour-shiftcount-assume
#=Status
#A
#=LocalSprelAssumptions:
#=Guard
#(epsilon)
#=LhsExpr
#1 : input.src.exreg.0.0 : BV:32
#2 : 32 : INT
#3 : isshiftcount(1, 2) : BOOL
#=RhsExpr
#1 : 1 : BOOL
#=tfg_edge
#L0%1%1 => L0%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.1
#1 : input.src.exreg.0.2 : BV:32
#2 : input.src.exreg.0.0 : BV:32
#3 : bvlshr(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#lshr:1
#--
#live : exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff],#
#memlive : false
#--
#in_tmap:
#exvr0.0 : exvr0.3D
#exvr0.2 : exvr0.1D
#out_tmap.0:
#exvr0.0 : exvr0.3D
#exvr0.1 : exvr0.2S
#exvr0.2 : exvr0.1D
#--
#fixed_reg_mappings
#--
#.i0: shrxl %exvr0.3d,%exvr0.1d,%exvr0.2d #
#.i1: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=precondition.0
#=Comment
#undef-behaviour-shiftcount-assume
#=Status
#A
#=LocalSprelAssumptions:
#=Guard
#(epsilon)
#=LhsExpr
#1 : input.src.exreg.0.0 : BV:32
#2 : 32 : INT
#3 : isshiftcount(1, 2) : BOOL
#=RhsExpr
#1 : 1 : BOOL
#=tfg_edge
#L0%1%1 => L0%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.1
#1 : input.src.exreg.0.2 : BV:32
#2 : input.src.exreg.0.0 : BV:32
#3 : bvashr(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#ashr:1
#--
#live : exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff],#
#memlive : false
#--
#in_tmap:
#exvr0.0 : exvr0.3D
#exvr0.2 : exvr0.1D
#out_tmap.0:
#exvr0.0 : exvr0.3D
#exvr0.1 : exvr0.2S
#exvr0.2 : exvr0.1D
#--
#fixed_reg_mappings
#--
#.i0: sarxl %exvr0.3d,%exvr0.1d,%exvr0.2d #
#.i1: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=precondition.0
#=Comment
#undef-behaviour-shiftcount-assume
#=Status
#A
#=LocalSprelAssumptions:
#=Guard
#(epsilon)
#=LhsExpr
#1 : const.0 : BV:32
#2 : 32 : INT
#3 : isshiftcount(1, 2) : BOOL
#=RhsExpr
#1 : 1 : BOOL
#=tfg_edge
#L0%1%1 => L0%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : input.src.exreg.0.1 : BV:32
#2 : const.0 : BV:32
#3 : bvshl(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#shl_c:1
#--
#live : exr0.0[0xffffffff], exr0.1[0xffffffff],#
#memlive : false
#--
#in_tmap:
#exvr0.1 : exvr0.1D
#out_tmap.0:
#exvr0.0 : exvr0.2S
#exvr0.1 : exvr0.1D
#--
#fixed_reg_mappings
#--
#.i0: movl $C0b,%exvr0.2d #
#.i1: shlxl %exvr0.2d,%exvr0.1d,%exvr0.2d #
#.i2: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=precondition.0
#=Comment
#undef-behaviour-shiftcount-assume
#=Status
#A
#=LocalSprelAssumptions:
#=Guard
#(epsilon)
#=LhsExpr
#1 : const.0 : BV:32
#2 : 32 : INT
#3 : isshiftcount(1, 2) : BOOL
#=RhsExpr
#1 : 1 : BOOL
#=tfg_edge
#L0%1%1 => L0%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : input.src.exreg.0.1 : BV:32
#2 : const.0 : BV:32
#3 : bvlshr(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#shr_c:1
#--
#live : exr0.0[0xffffffff], exr0.1[0xffffffff],#
#memlive : false
#--
#in_tmap:
#exvr0.1 : exvr0.1D
#out_tmap.0:
#exvr0.0 : exvr0.2S
#exvr0.1 : exvr0.1D
#--
#fixed_reg_mappings
#--
#.i0: movl $C0b,%exvr0.2d #
#.i1: shrxl %exvr0.2d,%exvr0.1d,%exvr0.2d #
#.i2: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=precondition.0
#=Comment
#undef-behaviour-shiftcount-assume
#=Status
#A
#=LocalSprelAssumptions:
#=Guard
#(epsilon)
#=LhsExpr
#1 : const.0 : BV:32
#2 : 32 : INT
#3 : isshiftcount(1, 2) : BOOL
#=RhsExpr
#1 : 1 : BOOL
#=tfg_edge
#L0%1%1 => L0%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : input.src.exreg.0.1 : BV:32
#2 : const.0 : BV:32
#3 : bvashr(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#shra_c:1
#--
#live : exr0.0[0xffffffff], exr0.1[0xffffffff],#
#memlive : false
#--
#in_tmap:
#exvr0.1 : exvr0.1D
#out_tmap.0:
#exvr0.0 : exvr0.2S
#exvr0.1 : exvr0.1D
#--
#fixed_reg_mappings
#--
#.i0: movl $C0b,%exvr0.2d #
#.i1: sarxl %exvr0.2d,%exvr0.1d,%exvr0.2d #
#.i2: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L0%1%1 => L0%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : input.src.exreg.0.1 : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#move32:1
#--
#live : exr0.0[0xffffffff], exr0.1[0xffffffff],#
#memlive : false
#--
#in_tmap:
#exvr0.1 : exvr0.1D
#out_tmap.0:
#exvr0.0 : exvr0.0D
#exvr0.1 : exvr0.1D
#--
#fixed_reg_mappings
#--
#.i0: movl %exvr0.1d,%exvr0.0d #
#.i1: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L0%1%1 => L0%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : input.src.exreg.0.1 : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#move32:1
#--
#live : exr0.0[0xffffffff], exr0.1[0xffffffff],#
#memlive : false
#--
#in_tmap:
#exvr0.1 : exvr0.1D
#out_tmap.0:
#exvr0.0 : MEMLOC0x0
#exvr0.1 : exvr0.1D
#--
#fixed_reg_mappings
#--
#.i0: movl %exvr0.1d,%exvr4.0w:C_SYMBOL0 #
#.i1: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L0%1%1 => L0%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : input.src.exreg.0.1 : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#move32:1
#--
#live : exr0.0[0xffffffff], exr0.1[0xffffffff],#
#memlive : false
#--
#in_tmap:
#exvr0.1 : MEMLOC0x0
#out_tmap.0:
#exvr0.0 : exvr0.0D
#exvr0.1 : MEMLOC0x0
#--
#fixed_reg_mappings
#--
#.i0: movl %exvr4.0w:C_SYMBOL0,%exvr0.0d #
#.i1: jmp .NEXTPC0x0 #
#==
#
#
#
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L0%1%1 => L0%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : input.src.exreg.0.1 : BV:32
#2 : input.src.exreg.0.2 : BV:32
#3 : bvand(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#bvand:1
#--
#live : exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff],#
#memlive : false
#--
#in_tmap:
#exvr0.1 : exvr0.1D
#exvr0.2 : exvr0.2D
#out_tmap.0:
#exvr0.0 : exvr0.3S
#exvr0.1 : exvr0.1D
#exvr0.2 : exvr0.2D
#--
#fixed_reg_mappings
#--
#.i0: movl %exvr0.1d,%exvr0.3d #
#.i1: andl %exvr0.2d,%exvr0.3d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
#.i4: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L0%1%1 => L0%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : input.src.exreg.0.1 : BV:32
#2 : input.src.exreg.0.2 : BV:32
#3 : bvor(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#bvor:1
#--
#live : exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff],#
#memlive : false
#--
#in_tmap:
#exvr0.1 : exvr0.1D
#exvr0.2 : exvr0.2D
#out_tmap.0:
#exvr0.0 : exvr0.3S
#exvr0.1 : exvr0.1D
#exvr0.2 : exvr0.2D
#--
#fixed_reg_mappings
#--
#.i0: movl %exvr0.1d,%exvr0.3d #
#.i1: orl %exvr0.2d,%exvr0.3d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
#.i4: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L0%1%1 => L0%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : input.src.exreg.0.1 : BV:32
#2 : input.src.exreg.0.2 : BV:32
#3 : bvxor(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#bvxor:1
#--
#live : exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff],#
#memlive : false
#--
#in_tmap:
#exvr0.1 : exvr0.1D
#exvr0.2 : exvr0.2D
#out_tmap.0:
#exvr0.0 : exvr0.3S
#exvr0.1 : exvr0.1D
#exvr0.2 : exvr0.2D
#--
#fixed_reg_mappings
#--
#.i0: movl %exvr0.1d,%exvr0.3d #
#.i1: xorl %exvr0.2d,%exvr0.3d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
#.i4: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L0%1%1 => L0%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : input.src.exreg.0.1 : BV:32
#2 : input.src.exreg.0.2 : BV:32
#3 : bvand(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#bvand:1
#--
#live : exr0.0[0xffffffff], exr0.2[0xffffffff],#
#memlive : false
#--
#in_tmap:
#exvr0.1 : exvr0.1D
#exvr0.2 : exvr0.2D
#out_tmap.0:
#exvr0.0 : exvr0.1S
#exvr0.2 : exvr0.2D
#--
#fixed_reg_mappings
#--
#.i1: andl %exvr0.2d,%exvr0.1d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
#.i4: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L0%1%1 => L0%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : input.src.exreg.0.1 : BV:32
#2 : input.src.exreg.0.2 : BV:32
#3 : bvor(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#bvor:1
#--
#live : exr0.0[0xffffffff], exr0.2[0xffffffff],#
#memlive : false
#--
#in_tmap:
#exvr0.1 : exvr0.1D
#exvr0.2 : exvr0.2D
#out_tmap.0:
#exvr0.0 : exvr0.1S
#exvr0.2 : exvr0.2D
#--
#fixed_reg_mappings
#--
#.i1: orl %exvr0.2d,%exvr0.1d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
#.i4: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L0%1%1 => L0%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : input.src.exreg.0.1 : BV:32
#2 : input.src.exreg.0.2 : BV:32
#3 : bvxor(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#bvxor:1
#--
#live : exr0.0[0xffffffff], exr0.2[0xffffffff],#
#memlive : false
#--
#in_tmap:
#exvr0.1 : exvr0.1D
#exvr0.2 : exvr0.2D
#out_tmap.0:
#exvr0.0 : exvr0.1S
#exvr0.2 : exvr0.2D
#--
#fixed_reg_mappings
#--
#.i1: xorl %exvr0.2d,%exvr0.1d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
#.i4: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L0%1%1 => L0%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : input.src.exreg.0.1 : BV:32
#2 : input.src.exreg.0.2 : BV:32
#3 : bvand(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#bvand:1
#--
#live : exr0.0[0xffffffff], exr0.1[0xffffffff],#
#memlive : false
#--
#in_tmap:
#exvr0.1 : exvr0.1D
#exvr0.2 : exvr0.2D
#out_tmap.0:
#exvr0.0 : exvr0.2S
#exvr0.1 : exvr0.1D
#--
#fixed_reg_mappings
#--
#.i1: andl %exvr0.1d,%exvr0.2d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
#.i4: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L0%1%1 => L0%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : input.src.exreg.0.1 : BV:32
#2 : input.src.exreg.0.2 : BV:32
#3 : bvor(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#bvor:1
#--
#live : exr0.0[0xffffffff], exr0.1[0xffffffff],#
#memlive : false
#--
#in_tmap:
#exvr0.1 : exvr0.1D
#exvr0.2 : exvr0.2D
#out_tmap.0:
#exvr0.0 : exvr0.2S
#exvr0.1 : exvr0.1D
#--
#fixed_reg_mappings
#--
#.i1: orl %exvr0.1d,%exvr0.2d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
#.i4: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L0%1%1 => L0%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : input.src.exreg.0.1 : BV:32
#2 : input.src.exreg.0.2 : BV:32
#3 : bvxor(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#bvxor:1
#--
#live : exr0.0[0xffffffff], exr0.1[0xffffffff],#
#memlive : false
#--
#in_tmap:
#exvr0.1 : exvr0.1D
#exvr0.2 : exvr0.2D
#out_tmap.0:
#exvr0.0 : exvr0.2S
#exvr0.1 : exvr0.1D
#--
#fixed_reg_mappings
#--
#.i1: xorl %exvr0.1d,%exvr0.2d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
#.i4: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L0%1%1 => L0%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : input.src.exreg.0.1 : BV:32
#2 : 4294967295 : BV:32
#3 : bvxor(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#bvxor1:1
#--
#live : exr0.0[0xffffffff], exr0.1[0xffffffff],#
#memlive : false
#--
#in_tmap:
#exvr0.1 : exvr0.1D
#out_tmap.0:
#exvr0.0 : exvr0.2S
#exvr0.1 : exvr0.1D
#--
#fixed_reg_mappings
#--
#.i0: movl %exvr0.1d,%exvr0.2d #
#.i1: notl %exvr0.2d #
#.i4: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L0%1%1 => L0%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : input.src.exreg.0.1 : BV:32
#2 : 4294967295 : BV:32
#3 : bvxor(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#bvxor1:1
#--
#live : exr0.0[0xffffffff],#
#memlive : false
#--
#in_tmap:
#exvr0.1 : exvr0.1D
#out_tmap.0:
#exvr0.0 : exvr0.1S
#--
#fixed_reg_mappings
#--
#.i0: notl %exvr0.1d #
#.i1: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L0%1%1 => L0%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : input.src.exreg.0.1 : BV:32
#2 : 31 : BV:32
#3 : bvand(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#and_shl1_not:1
#=etfg_insn
#=precondition.0
#=Comment
#undef-behaviour-shiftcount-assume
#=Status
#A
#=LocalSprelAssumptions:
#=Guard
#(epsilon)
#=LhsExpr
#1 : input.src.exreg.0.0 : BV:32
#2 : 32 : INT
#3 : isshiftcount(1, 2) : BOOL
#=RhsExpr
#1 : 1 : BOOL
#=tfg_edge
#L0%1%1 => L0%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.2
#1 : 1 : BV:32
#2 : input.src.exreg.0.0 : BV:32
#3 : bvshl(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#and_shl1_not:2
#=etfg_insn
#=tfg_edge
#L0%1%1 => L0%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.3
#1 : input.src.exreg.0.2 : BV:32
#2 : 4294967295 : BV:32
#3 : bvxor(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#and_shl1_not:2
#--
#live : exr0.1[0xffffffff], exr0.3[0xffffffff],#
#memlive : false
#--
#in_tmap:
#exvr0.1 : exvr0.1D
#out_tmap.0:
#exvr0.1 : exvr0.1D
#exvr0.3 : exvr0.3D
#--
#fixed_reg_mappings
#--
#.i0: movl $0xfffffffe, %exvr0.3d #
#.i1: roll %exvr0.1b,%exvr0.3d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
#.i2: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L.lr.ph%5%1 => L.lr.ph%5%2
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : 0 : BV:32
#2 : input.src.exreg.0.1 : BV:32
#3 : 4 : BV:32
#4 : bvmul(2, 3) : BV:32
#5 : bvadd(1, 4) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#and_mem_4scale:1
#=etfg_insn
#=tfg_edge
#L0%1%1 => L0%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.3
#1 : input.src.exreg.0.4 : BV:32
#2 : input.src.exreg.0.0 : BV:32
#3 : bvadd(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#and_mem_4scale:2
#=etfg_insn
#=tfg_edge
#L.lr.ph%5%3 => L.lr.ph%6%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.5
#1 : input.src.exreg.0.3 : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#and_mem_4scale:3
#=etfg_insn
#=tfg_edge
#L0%1%1 => L0%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.6
#1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
#2 : mlvar.llvm.0 : MEMLABEL
#3 : input.src.exreg.0.3 : BV:32
#4 : 4 : INT
#5 : 0 : BOOL
#6 : select(1, 2, 3, 4, 5) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#and_mem_4scale:3
#=etfg_insn
#=tfg_edge
#L0%1%1 => L0%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.9
#1 : input.src.exreg.0.6 : BV:32
#2 : input.src.exreg.0.8 : BV:32
#3 : bvand(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#and_mem_4scale:4
#=etfg_insn
#=tfg_edge
#L0%1%1 => L0%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.llvm-mem
#1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
#2 : mlvar.llvm.0 : MEMLABEL
#3 : input.src.exreg.0.3 : BV:32
#4 : input.src.exreg.0.9 : BV:32
#5 : 4 : INT
#6 : 0 : BOOL
#7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#and_mem_4scale:5
#--
#live : exr0.1[0xffffffff], exr0.4[0xffffffff], exr0.8[0xffffffff],#
#memlive : true
#--
#in_tmap:
#exvr0.1 : exvr0.1D
#exvr0.4 : exvr0.3D
#exvr0.8 : exvr0.6D
#out_tmap.0:
#exvr0.1 : exvr0.1D
#exvr0.4 : exvr0.3D
#exvr0.8 : exvr0.6D
#--
#fixed_reg_mappings
#--
#.i0: andl %exvr0.6d,0x0(%exvr0.3d,%exvr0.1d,4) #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
#.i2: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L0%1%1 => L0%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : const.0 : BV:32
#2 : input.src.exreg.0.1 : BV:32
#3 : bvadd(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#add_i32c:1
#--
#live : exr0.0[0xffffffff], exr0.1[0xffffffff],#
#memlive : false
#--
#in_tmap:
#exvr0.1 : exvr0.1D
#out_tmap.0:
#exvr0.0 : exvr0.0S
#exvr0.1 : exvr0.1D
#--
#fixed_reg_mappings
#--
#.i0: leal %exvr4.0w:C0(%exvr0.1d),%exvr0.0d #
#.i1: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L0%1%1 => L0%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : const.0 : BV:32
#2 : input.src.exreg.0.1 : BV:32
#3 : bvadd(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#add_i32c:1
#--
#live : exr0.0[0xffffffff],#
#memlive : false
#--
#in_tmap:
#exvr0.1 : exvr0.0D
#out_tmap.0:
#exvr0.0 : exvr0.0D
#--
#fixed_reg_mappings
#--
#.i0: addl $C0,%exvr0.0d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
#.i1: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L.lr.ph9%2%1 => L.lr.ph9%2%100003
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : 0 : BV:32
#2 : input.src.exreg.0.1 : BV:32
#3 : 4 : BV:32
#4 : bvmul(2, 3) : BV:32
#5 : bvadd(1, 4) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#nsieve:28
#=etfg_insn
#=tfg_edge
#L.lr.ph9%2%100003 => L.lr.ph9%2%100004
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.2
#1 : input.src.exreg.0.3 : BV:32
#2 : input.src.exreg.0.0 : BV:32
#3 : bvadd(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#nsieve:29
#=etfg_insn
#=tfg_edge
#L.lr.ph9%2%100004 => L.lr.ph9%3%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.4
#1 : input.src.exreg.0.2 : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#nsieve:30
#=etfg_insn
#=tfg_edge
#L.lr.ph9%3%1 => L.lr.ph9%4%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.5
#1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
#2 : mlvar.llvm.0 : MEMLABEL
#3 : input.src.exreg.0.2 : BV:32
#4 : 4 : INT
#5 : 0 : BOOL
#6 : select(1, 2, 3, 4, 5) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#nsieve:31
#--
#live : exr0.1[0xffffffff], exr0.3[0xffffffff], exr0.5[0xffffffff],#
#memlive : true
#--
#in_tmap:
#exvr0.1 : exvr0.1D
#exvr0.3 : exvr0.3D
#out_tmap.0:
#exvr0.1 : exvr0.1D
#exvr0.3 : exvr0.3D
#exvr0.5 : exvr0.5S
#--
#fixed_reg_mappings
#--
#.i0: movl %exvr4.0w:0x0(%exvr0.3d,%exvr0.1d,4),%exvr0.5d #
#.i2: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L.lr.ph9%4%1 => L.lr.ph9%5%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : input.src.exreg.0.1 : BV:32
#2 : 31 : BV:32
#3 : bvand(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#nsieve:32
#=etfg_insn
#=precondition.0
#=Comment
#undef-behaviour-shiftcount-assume
#=Status
#A
#=LocalSprelAssumptions:
#=Guard
#(epsilon)
#=LhsExpr
#1 : input.src.exreg.0.0 : BV:32
#2 : 32 : INT
#3 : isshiftcount(1, 2) : BOOL
#=RhsExpr
#1 : 1 : BOOL
#=tfg_edge
#L.lr.ph9%5%1 => L.lr.ph9%6%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.2
#1 : 1 : BV:32
#2 : input.src.exreg.0.0 : BV:32
#3 : bvshl(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#nsieve:33
#=etfg_insn
#=tfg_edge
#L.lr.ph9%6%1 => L.lr.ph9%7%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.3
#1 : input.src.exreg.0.4 : BV:32
#2 : input.src.exreg.0.2 : BV:32
#3 : bvand(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#nsieve:34
#=etfg_insn
#=tfg_edge
#L.lr.ph9%7%1 => L.lr.ph9%8%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.5
#1 : input.src.exreg.0.5 : BV:32
#2 : 31 : INT
#3 : 1 : INT
#4 : bvextract(1, 2, 3) : BV:31
#5 : input.src.exreg.0.3 : BV:32
#6 : 0 : BV:32
#7 : eq(5, 6) : BOOL
#8 : 1 : BV:1
#9 : 0 : BV:1
#10 : ite(7, 8, 9) : BV:1
#11 : bvconcat(4, 10) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#nsieve:35
#--
#live : exr0.1[0xffffffff], exr0.4[0xffffffff], exr0.5[0x1],#
#memlive : true
#--
#in_tmap:
#exvr0.1 : exvr0.1D
#exvr0.4 : exvr0.4D
#out_tmap.0:
#exvr0.1 : exvr0.1D
#exvr0.4 : exvr0.4D
#exvr0.5 : exvr14.0D
#--
#fixed_reg_mappings
#--
#.i0: btl %exvr0.1d,%exvr0.4d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
#.i2: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L0%1%1 => L0%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : 2 : BV:32
#2 : input.src.exreg.0.1 : BV:32
#3 : bvmul(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#mul2:1
#--
#live : exr0.0[0xffffffff], exr0.1[0xffffffff],#
#memlive : false
#--
#in_tmap:
#exvr0.1 : exvr0.1D
#out_tmap.0:
#exvr0.0 : exvr0.0S
#exvr0.1 : exvr0.1D
#--
#fixed_reg_mappings
#--
#.i0: leal 0x0(%exvr0.1d,%exvr0.1d,1),%exvr0.0d #
#.i1: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L.lr.ph%1%1 => L.lr.ph%1%100003
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.1
#1 : 0 : BV:32
#2 : 8 : BV:32
#3 : bvmul(1, 2) : BV:32
#4 : bvadd(1, 3) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#reverse_inplace:13
#=etfg_insn
#=tfg_edge
#L.lr.ph%1%100003 => L.lr.ph%1%100004
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.2
#1 : input.src.exreg.0.1 : BV:32
#2 : 4 : BV:32
#3 : bvadd(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#reverse_inplace:14
#=etfg_insn
#=tfg_edge
#L.lr.ph%1%100004 => L.lr.ph%1%100005
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.3
#1 : input.src.exreg.0.0 : BV:32
#2 : input.src.exreg.0.2 : BV:32
#3 : bvadd(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#reverse_inplace:15
#=etfg_insn
#=tfg_edge
#L.lr.ph%1%100005 => L.lr.ph%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.4
#1 : input.src.exreg.0.3 : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#reverse_inplace:16
#=etfg_insn
#=tfg_edge
#L.lr.ph%2%1 => L.lr.ph%3%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.5
#1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
#2 : mlvar.llvm.0 : MEMLABEL
#3 : input.src.exreg.0.3 : BV:32
#4 : 4 : INT
#5 : 0 : BOOL
#6 : select(1, 2, 3, 4, 5) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#reverse_inplace:17
#=etfg_insn
#=tfg_edge
#L.lr.ph%3%1 => L.lr.ph%4%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.llvm-mem
#1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
#2 : mlvar.llvm.1 : MEMLABEL
#3 : input.src.exreg.0.3 : BV:32
#4 : input.src.exreg.0.6 : BV:32
#5 : 4 : INT
#6 : 0 : BOOL
#7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#reverse_inplace:18
#--
#live : exr0.0[0xffffffff], exr0.5[0xffffffff], exr0.6[0xffffffff]#
#memlive : true
#--
#in_tmap:
#exvr0.0 : exvr0.0D
#exvr0.6 : exvr0.6D
#out_tmap.0:
#exvr0.0 : exvr0.0D
#exvr0.5 : exvr0.5D
#exvr0.6 : exvr0.6D
#--
#fixed_reg_mappings
#--
#.i0: movl 0x4(%exvr0.0d),%exvr0.5d #
#.i1: movl %exvr0.6d,0x4(%exvr0.0d) #
#.i2: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L.lr.ph8.preheader.new%1%1 => L.lr.ph8.preheader.new%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : input.src.exreg.0.1 : BV:32
#2 : input.src.exreg.0.2 : BV:32
#3 : bvsub(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#nsieve:36
#--
#live : exr0.0[0xffffffff], exr0.2[0xffffffff]#
#memlive : false
#--
#in_tmap:
#exvr0.1 : exvr0.0D
#exvr0.2 : exvr0.2D
#out_tmap.0:
#exvr0.0 : exvr0.0D
#exvr0.2 : exvr0.2D
#--
#fixed_reg_mappings
#--
#.i0: subl %exvr0.2d,%exvr0.0d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
#.i1: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L.lr.ph8.preheader.new%1%1 => L.lr.ph8.preheader.new%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : input.src.exreg.0.1 : BV:32
#2 : input.src.exreg.0.2 : BV:32
#3 : bvsub(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#nsieve:36
#--
#live : exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff]#
#memlive : false
#--
#in_tmap:
#exvr0.1 : exvr0.1D
#exvr0.2 : exvr0.2D
#out_tmap.0:
#exvr0.0 : exvr0.0D
#exvr0.1 : exvr0.1D
#exvr0.2 : exvr0.2D
#--
#fixed_reg_mappings
#--
#.i0: movl %exvr0.1d,%exvr0.0d #
#.i1: subl %exvr0.2d,%exvr0.0d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
#.i2: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L.lr.ph%1%1 => L.lr.ph%1%100003
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : 0 : BV:32
#2 : input.src.exreg.0.1 : BV:32
#3 : 1 : BV:32
#4 : bvmul(2, 3) : BV:32
#5 : bvadd(1, 4) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#nsieve:67
#=etfg_insn
#=tfg_edge
#L.lr.ph%1%100003 => L.lr.ph%1%100004
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.2
#1 : input.src.exreg.0.3 : BV:32
#2 : input.src.exreg.0.0 : BV:32
#3 : bvadd(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#nsieve:68
#=etfg_insn
#=tfg_edge
#L.lr.ph%1%100004 => L.lr.ph%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.4
#1 : input.src.exreg.0.2 : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#nsieve:69
#=etfg_insn
#=tfg_edge
#L.lr.ph%2%1 => L.lr.ph%3%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.5
#1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
#2 : mlvar.llvm.1 : MEMLABEL
#3 : input.src.exreg.0.2 : BV:32
#4 : 1 : INT
#5 : 0 : BOOL
#6 : select(1, 2, 3, 4, 5) : BV:8
#7 : input.src.exreg.0.5 : BV:32
#8 : 31  : INT
#9 : 8 : INT
#10 : bvextract(7, 8, 9) : BV:24
#11 : bvconcat(10, 6) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#nsieve:70
#--
#live : exr0.1[0xffffffff], exr0.3[0xffffffff], exr0.5[0xff]#
#memlive : true
#--
#in_tmap:
#exvr0.1 : exvr0.1D
#exvr0.3 : exvr0.3D
#out_tmap.0:
#exvr0.1 : exvr0.1D
#exvr0.3 : exvr0.3D
#exvr0.5 : exvr0.5D
#--
#fixed_reg_mappings
#--
#.i0: movzbl %exvr4.0w:0x0(%exvr0.1d,%exvr0.3d,1),%exvr0.5d #
#.i1: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L.lr.ph%1%1 => L.lr.ph%1%100003
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : 0 : BV:32
#2 : input.src.exreg.0.1 : BV:32
#3 : 1 : BV:32
#4 : bvmul(2, 3) : BV:32
#5 : bvadd(1, 4) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#nsieve:67
#=etfg_insn
#=tfg_edge
#L.lr.ph%1%100003 => L.lr.ph%1%100004
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.2
#1 : input.src.exreg.0.3 : BV:32
#2 : input.src.exreg.0.0 : BV:32
#3 : bvadd(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#nsieve:68
#=etfg_insn
#=tfg_edge
#L.lr.ph%1%100004 => L.lr.ph%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.4
#1 : input.src.exreg.0.2 : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#nsieve:69
#=etfg_insn
#=tfg_edge
#L.lr.ph%2%1 => L.lr.ph%3%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.5
#1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
#2 : mlvar.llvm.1 : MEMLABEL
#3 : input.src.exreg.0.4 : BV:32
#4 : 1 : INT
#5 : 0 : BOOL
#6 : select(1, 2, 3, 4, 5) : BV:8
#7 : input.src.exreg.0.5 : BV:32
#8 : 31 : INT
#9 : 8 : INT
#10 : bvextract(7, 8, 9) : BV:24
#11 : bvconcat(10, 6) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#nsieve:70
#=etfg_insn
#=tfg_edge
#L.lr.ph%3%1 => L.lr.ph%4%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.6
#1 : input.src.exreg.0.5 : BV:32
#2 : 0 : BV:8
#4 : input.src.exreg.0.6 : BV:32
#5 : 31 : INT
#6 : 1 : INT
#7 : bvextract(4, 5, 6) : BV:31
#8 : 0 : BV:1
#9 : 1 : BV:1
#11 : 7 : INT
#12 : 0 : INT
#13 : bvextract(1, 11, 12) : BV:8
#14: eq(13, 2) : BOOL
#15 : ite(14, 9, 8) : BV:1
#11 : bvconcat(7, 15) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#nsieve:71
#=etfg_insn
#=tfg_edge
#L.lr.ph%4%1 => L18%1%0
#=tfg_edge_EdgeCond:
#1 : input.src.exreg.0.6 : BV:32
#2 : 0 : INT
#3 : bvextract(1, 2, 2) : BV:1
#4 : 1 : BV:1
#5 : eq(3, 4) : BOOL
#=tfg_edge_StateTo:
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=tfg_edge
#L.lr.ph%4%1 => L17%1%0
#=tfg_edge_EdgeCond:
#1 : input.src.exreg.0.6 : BV:32
#2 : 0 : INT
#3 : bvextract(1, 2, 2) : BV:1
#4 : 1 : BV:1
#5 : eq(3, 4) : BOOL
#6 : not(5) : BOOL
#=tfg_edge_StateTo:
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#nsieve:72
#=etfg_insn
#=tfg_edge
#L17%1%0 => L17%1%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#nsieve:73
#=etfg_insn
#=tfg_edge
#L17%1%1 => L17%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.llvm-mem
#1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
#2 : mlvar.llvm.2 : MEMLABEL
#3 : input.src.exreg.0.4 : BV:32
#4 : 0 : BV:8
#5 : 1 : INT
#6 : 0 : BOOL
#7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#nsieve:74
#=etfg_insn
#=tfg_edge
#L17%2%1 => L18%1%0
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#nsieve:75
#--
#live : exr0.1[0xffffffff], exr0.3[0xffffffff], #
#memlive : true
#--
#in_tmap:
#exvr0.1 : exvr0.1D
#exvr0.3 : exvr0.3D
#out_tmap.0:
#exvr0.1 : exvr0.1D
#exvr0.3 : exvr0.3D
#--
#fixed_reg_mappings
#--
#.i0: movb $0x0,%exvr4.0w:0x0(%exvr0.1d,%exvr0.3d,1) #
#.i1: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L11%1%200003 => L11%1%200004
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : const.0 : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#BottomUpTree:26
#--
#live : exr0.0[0xffffffff],#
#memlive : false
#--
#in_tmap:
#out_tmap.0:
#exvr0.0 : MEMLOC0x0
#--
#fixed_reg_mappings
#--
#.i0: movl $C0,%exvr4.0w:C_SYMBOL0 #
#.i1: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L1%1%1 => L1%1%100003
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : 0 : BV:32
#2 : const.0 : BV:32
#3 : bvmul(1, 2) : BV:32
#4 : bvadd(1, 3) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#ItemCheck:1
#=etfg_insn
#=tfg_edge
#L1%1%100003 => L1%1%100004
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.1
#1 : input.src.exreg.0.0 : BV:32
#2 : 0 : BV:32
#3 : bvadd(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#ItemCheck:2
#=etfg_insn
#=tfg_edge
#L1%1%100004 => L1%1%100005
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.2
#1 : input.src.exreg.0.3 : BV:32
#2 : input.src.exreg.0.1 : BV:32
#3 : bvadd(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#ItemCheck:3
#=etfg_insn
#=tfg_edge
#L1%1%100005 => L1%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.4
#1 : input.src.exreg.0.2 : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#DeleteTree:4
#=etfg_insn
#=tfg_edge
#L1%2%1 => L1%3%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.5
#1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
#2 : mlvar.llvm.0 : MEMLABEL
#3 : input.src.exreg.0.2 : BV:32
#4 : 4 : INT
#5 : 0 : BOOL
#6 : select(1, 2, 3, 4, 5) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#DeleteTree:5
#--
#live : exr0.3[0xffffffff], exr0.5[0xffffffff]#
#memlive : true
#--
#in_tmap:
#exvr0.3 : exvr0.3D
#out_tmap.0:
#exvr0.5 : exvr0.5D
#exvr0.3 : exvr0.3D
#--
#fixed_reg_mappings
#--
#.i0: movl %exvr4.0w:(%exvr0.3d),%exvr0.5d #
#.i1: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L1%1%1 => L1%1%100003
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : 0 : BV:32
#2 : const.0 : BV:32
#3 : bvmul(1, 2) : BV:32
#4 : bvadd(1, 3) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#ItemCheck:1
#=etfg_insn
#=tfg_edge
#L1%1%100003 => L1%1%100004
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.1
#1 : input.src.exreg.0.0 : BV:32
#2 : 0 : BV:32
#3 : bvadd(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#ItemCheck:2
#=etfg_insn
#=tfg_edge
#L1%1%100004 => L1%1%100005
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.2
#1 : input.src.exreg.0.3 : BV:32
#2 : input.src.exreg.0.1 : BV:32
#3 : bvadd(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#ItemCheck:3
#--
#live : exr0.2[0xffffffff],#
#memlive : false
#--
#in_tmap:
#exvr0.3 : exvr0.3D
#out_tmap.0:
#exvr0.2 : exvr0.3D
#--
#fixed_reg_mappings
#--
#.i0: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L1%4%1 => L1%4%100003
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.1
#1 : 0 : BV:32
#2 : const.1 : BV:32
#3 : bvmul(1, 2) : BV:32
#4 : bvadd(1, 3) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#ItemCheck:7
#=etfg_insn
#=tfg_edge
#L1%4%100003 => L1%4%100004
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.2
#1 : input.src.exreg.0.1 : BV:32
#2 : const.0 : BV:32
#3 : bvadd(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#ItemCheck:8
#=etfg_insn
#=tfg_edge
#L1%4%100004 => L1%4%100005
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.3
#1 : input.src.exreg.0.0 : BV:32
#2 : input.src.exreg.0.2 : BV:32
#3 : bvadd(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#ItemCheck:9
#=etfg_insn
#=tfg_edge
#L1%4%100005 => L1%5%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.4
#1 : input.src.exreg.0.3 : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#ItemCheck:10
#=etfg_insn
#=tfg_edge
#L1%5%1 => L1%6%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.5
#1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
#2 : mlvar.llvm.0 : MEMLABEL
#3 : input.src.exreg.0.3 : BV:32
#4 : 4 : INT
#5 : 0 : BOOL
#6 : select(1, 2, 3, 4, 5) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#ItemCheck:11
#--
#live : exr0.0[0xffffffff], exr0.5[0xffffffff],#
#memlive : true
#--
#in_tmap:
#exvr0.0 : exvr0.0D
#out_tmap.0:
#exvr0.0 : exvr0.0D
#exvr0.5 : exvr0.5D
#--
#fixed_reg_mappings
#--
#.i0: movl %exvr4.0w:C0(%exvr0.0d),%exvr0.5d #
#.i1: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L3%5%1 => L3%5%100003
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : 0 : BV:32
#2 : const.0 : BV:32
#3 : 1 : BV:32
#4 : bvmul(2, 3) : BV:32
#5 : bvadd(1, 4) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#NewTreeNode:8
#=etfg_insn
#=tfg_edge
#L3%5%100003 => L3%5%100004
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.1
#1 : input.src.exreg.0.2 : BV:32
#2 : input.src.exreg.0.0 : BV:32
#3 : bvadd(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#NewTreeNode:9
#=etfg_insn
#=tfg_edge
#L3%5%100004 => L3%6%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.3
#1 : input.src.exreg.0.1 : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#NewTreeNode:10
#=etfg_insn
#=tfg_edge
#L3%6%1 => L3%7%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.4
#1 : input.src.exreg.0.1 : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#NewTreeNode:11
#=etfg_insn
#=tfg_edge
#L3%7%1 => L3%8%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.llvm-mem
#1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
#2 : mlvar.llvm.0 : MEMLABEL
#3 : input.src.exreg.0.1 : BV:32
#4 : input.src.exreg.0.5 : BV:32
#5 : 4 : INT
#6 : 0 : BOOL
#7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#NewTreeNode:12
#--
#live : exr0.2[0xffffffff], exr0.5[0xffffffff],#
#memlive : true
#--
#in_tmap:
#exvr0.2 : exvr0.2D
#exvr0.5 : exvr0.5D
#out_tmap.0:
#exvr0.2 : exvr0.2D
#exvr0.5 : exvr0.5D
#--
#fixed_reg_mappings
#--
#.i0: movl %exvr0.5d,%exvr4.0w:C0(%exvr0.2d) #
#.i1: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L3%2%1 => L3%3%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : input.src.exreg.0.1 : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#NewTreeNode:5
#--
#live : exr0.1[0xffffffff],#
#memlive : false
#--
#in_tmap:
#exvr0.1 : exvr0.1D
#out_tmap.0:
#exvr0.1 : exvr0.1D
#--
#fixed_reg_mappings
#--
#.i0: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L4%1%1 => L4%1%100003
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : 0 : BV:32
#2 : 1 : BV:32
#3 : const.0 : BV:32
#4 : bvmul(2, 3) : BV:32
#5 : bvadd(1, 4) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#main:7
#=etfg_insn
#=tfg_edge
#L4%1%100003 => L4%1%100004
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.1
#1 : input.src.exreg.0.2 : BV:32
#2 : input.src.exreg.0.0 : BV:32
#3 : bvadd(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#main:8
#=etfg_insn
#=tfg_edge
#L4%1%100004 => L4%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.3
#1 : input.src.exreg.0.1 : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#main:9
#=etfg_insn
#=tfg_edge
#L4%2%1 => L4%3%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.4
#1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
#2 : mlvar.llvm.0 : MEMLABEL
#3 : input.src.exreg.0.1 : BV:32
#4 : 4 : INT
#5 : 0 : BOOL
#6 : select(1, 2, 3, 4, 5) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#main:10
#--
#live : exr0.2[0xffffffff], exr0.4[0xffffffff],#
#memlive : true
#--
#in_tmap:
#exvr0.2 : exvr0.2D
#out_tmap.0:
#exvr0.2 : exvr0.2D
#exvr0.4 : exvr0.4D
#--
#fixed_reg_mappings
#--
#.i0: movl %exvr4.0w:C0(%exvr0.2d),%exvr0.4d #
#.i1: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L.lr.ph5%4%1 => L.lr.ph5%4%100003
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : 0 : BV:32
#2 : 38 : BV:32
#3 : bvmul(1, 2) : BV:32
#4 : bvadd(1, 3) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#main:38
#=etfg_insn
#=tfg_edge
#L.lr.ph5%4%100003 => L.lr.ph5%4%100004
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.1
#1 : input.src.exreg.0.0 : BV:32
#2 : 0 : BV:32
#3 : 1 : BV:32
#4 : bvmul(2, 3) : BV:32
#5 : bvadd(1, 4) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#main:39
#=etfg_insn
#=tfg_edge
#L.lr.ph5%4%100004 => L.lr.ph5%4%100005
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.2
#1 : const.0 : BV:32
#2 : input.src.exreg.0.1 : BV:32
#3 : bvadd(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#main:40
#--
#live : exr0.2[0xffffffff],#
#memlive : false
#--
#in_tmap:
#out_tmap.0:
#exvr0.2 : MEMLOC0x0
#--
#fixed_reg_mappings
#--
#.i0: movl $C0,%exvr4.0w:C_SYMBOL0 #
#.i1: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L.lr.ph5%3%1 => L.lr.ph5%3%100003
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : 0 : BV:32
#2 : input.src.exreg.0.1 : BV:32
#3 : 4 : BV:32
#4 : bvmul(2, 3) : BV:32
#5 : bvadd(1, 4) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#main:42
#--
#live : exr0.0[0xffffffff], exr0.1[0xffffffff],#
#memlive : false
#--
#in_tmap:
#exvr0.1 : exvr0.1D
#out_tmap.0:
#exvr0.0 : exvr0.0S
#exvr0.1 : exvr0.1D
#--
#fixed_reg_mappings
#--
#.i0: leal %exvr4.0w:0x0(,%exvr0.1d,4),%exvr0.0d #
#.i1: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L.lr.ph5%3%1 => L.lr.ph5%3%100003
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : 0 : BV:32
#2 : input.src.exreg.0.1 : BV:32
#3 : 4 : BV:32
#4 : bvmul(2, 3) : BV:32
#5 : bvadd(1, 4) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#main:42
#=etfg_insn
#=tfg_edge
#L.lr.ph5%3%100003 => L.lr.ph5%3%100004
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.2
#1 : input.src.exreg.0.3 : BV:32
#2 : input.src.exreg.0.0 : BV:32
#3 : bvadd(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#main:43
#--
#live : exr0.1[0xffffffff], exr0.3[0xffffffff], exr0.2[0xffffffff],#
#memlive : true
#--
#in_tmap:
#exvr0.1 : exvr0.1D
#exvr0.3 : exvr0.3D
#exvr0.2 : exvr0.2D
#out_tmap.0:
#exvr0.1 : exvr0.1D
#exvr0.3 : exvr0.3D
#exvr0.2 : exvr0.2D
#--
#fixed_reg_mappings
#--
#.i0: leal %exvr4.0w:(%exvr0.3d,%exvr0.1d,4),%exvr0.2d #
#.i1: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L.lr.ph5%3%1 => L.lr.ph5%3%100003
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : 0 : BV:32
#2 : input.src.exreg.0.1 : BV:32
#3 : 4 : BV:32
#4 : bvmul(2, 3) : BV:32
#5 : bvadd(1, 4) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#main:42
#=etfg_insn
#=tfg_edge
#L.lr.ph5%3%100003 => L.lr.ph5%3%100004
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.2
#1 : input.src.exreg.0.3 : BV:32
#2 : input.src.exreg.0.0 : BV:32
#3 : bvadd(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#main:43
#=etfg_insn
#=tfg_edge
#L.lr.ph5%3%100004 => L.lr.ph5%4%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.4
#1 : input.src.exreg.0.2 : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#main:44
#=etfg_insn
#=tfg_edge
#L.lr.ph5%4%1 => L.lr.ph5%5%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.llvm-mem
#1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
#2 : mlvar.llvm.0 : MEMLABEL
#3 : input.src.exreg.0.2 : BV:32
#4 : input.src.exreg.0.5 : BV:32
#5 : 4 : INT
#6 : 0 : BOOL
#7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#main:45
#--
#live : exr0.1[0xffffffff], exr0.3[0xffffffff], exr0.5[0xffffffff],#
#memlive : true
#--
#in_tmap:
#exvr0.1 : exvr0.1D
#exvr0.3 : exvr0.3D
#exvr0.5 : exvr0.5D
#out_tmap.0:
#exvr0.1 : exvr0.1D
#exvr0.3 : exvr0.3D
#exvr0.5 : exvr0.5D
#--
#fixed_reg_mappings
#--
#.i0: movl %exvr0.5d,%exvr4.0w:(%exvr0.3d,%exvr0.1d,4) #
#.i1: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L.lr.ph%1%1 => L.lr.ph%1%100003
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : 0 : BV:32
#2 : input.src.exreg.0.1 : BV:32
#3 : 4 : BV:32
#4 : bvmul(2, 3) : BV:32
#5 : bvadd(1, 4) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#quicksort:36
#=etfg_insn
#=tfg_edge
#L.lr.ph%1%100003 => L.lr.ph%1%100004
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.2
#1 : input.src.exreg.0.3 : BV:32
#2 : input.src.exreg.0.0 : BV:32
#3 : bvadd(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#quicksort:37
#=etfg_insn
#=tfg_edge
#L.lr.ph%1%100004 => L.lr.ph%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.4
#1 : input.src.exreg.0.2 : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#quicksort:38
#=etfg_insn
#=tfg_edge
#L.lr.ph%2%1 => L.lr.ph%3%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.5
#1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
#2 : mlvar.llvm.0 : MEMLABEL
#3 : input.src.exreg.0.2 : BV:32
#4 : 4 : INT
#5 : 0 : BOOL
#6 : select(1, 2, 3, 4, 5) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#quicksort:39
#--
#live : exr0.1[0xffffffff], exr0.3[0xffffffff], exr0.5[0xffffffff],#
#memlive : true
#--
#in_tmap:
#exvr0.1 : exvr0.1D
#exvr0.3 : exvr0.3D
#out_tmap.0:
#exvr0.1 : exvr0.1D
#exvr0.3 : exvr0.3D
#exvr0.5 : exvr0.5D
#--
#fixed_reg_mappings
#--
#.i0: movl %exvr4.0w:(%exvr0.3d,%exvr0.1d,4),%exvr0.5d #
#.i1: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L35%1%1 => L35%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.1
#1 : input.src.exreg.0.11 : BV:32
#2 : 1 : BV:32
#3 : bvadd(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#main:149
#=etfg_insn
#=tfg_edge
#L35%2%1 => L35%2%100003
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : 0 : BV:32
#2 : input.src.exreg.0.1 : BV:32
#3 : 4 : BV:32
#4 : bvmul(2, 3) : BV:32
#5 : bvadd(1, 4) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#main:150
#=etfg_insn
#=tfg_edge
#L35%2%100003 => L35%2%100004
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.2
#1 : input.src.exreg.0.3 : BV:32
#2 : input.src.exreg.0.0 : BV:32
#3 : bvadd(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#main:151
#=etfg_insn
#=tfg_edge
#L35%2%100004 => L35%3%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.4
#1 : input.src.exreg.0.2 : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#main:152
#=etfg_insn
#=tfg_edge
#L35%3%1 => L35%4%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.5
#1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
#2 : mlvar.llvm.0 : MEMLABEL
#3 : input.src.exreg.0.2 : BV:32
#4 : 4 : INT
#5 : 0 : BOOL
#6 : select(1, 2, 3, 4, 5) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#main:153
#=etfg_insn
#=tfg_edge
#L35%4%1 => L35%5%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.6
#1 : input.src.exreg.0.7 : BV:32
#2 : input.src.exreg.0.5 : BV:32
#3 : bvsgt(1, 2) : BOOL
#4 : input.src.exreg.0.6 : BV:32
#5 : 31 : INT
#6 : 1 : INT
#7 : bvextract(4, 5, 6) : BV:31
#8 : 1 : BV:1
#9 : 0 : BV:1
#10 : ite(3, 8, 9) : BV:1
#11 : bvconcat(7, 10) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#main:154
#=etfg_insn
#=tfg_edge
#L35%5%1 => L41%1%0
#=tfg_edge_EdgeCond:
#1 : input.src.exreg.0.6 : BV:32
#2 : 0 : INT
#3 : bvextract(1, 2, 2) : BV:1
#4 : 1 : BV:1
#5 : eq(3, 4) : BOOL
#=tfg_edge_StateTo:
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=tfg_edge
#L35%5%1 => L35%5%100003
#=tfg_edge_EdgeCond:
#1 : input.src.exreg.0.6 : BV:32
#2 : 0 : INT
#3 : bvextract(1, 2, 2) : BV:1
#4 : 1 : BV:1
#5 : eq(3, 4) : BOOL
#6 : not(5) : BOOL
#=tfg_edge_StateTo:
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#main:155
#=etfg_insn
#=tfg_edge
#L41%1%0 => L41%1%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#main:159
#=etfg_insn
#=tfg_edge
#L41%1%1 => L41%1%100003
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.10
#1 : 0 : BV:32
#2 : input.src.exreg.0.11 : BV:32
#3 : 4 : BV:32
#4 : bvmul(2, 3) : BV:32
#5 : bvadd(1, 4) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#main:160
#=etfg_insn
#=tfg_edge
#L41%1%100003 => L41%1%100004
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.12
#1 : input.src.exreg.0.3 : BV:32
#2 : input.src.exreg.0.10 : BV:32
#3 : bvadd(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#main:161
#=etfg_insn
#=tfg_edge
#L41%1%100004 => L41%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.14
#1 : input.src.exreg.0.12 : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#main:162
#=etfg_insn
#=tfg_edge
#L41%2%1 => L41%3%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.llvm-mem
#1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
#2 : mlvar.llvm.0 : MEMLABEL
#3 : input.src.exreg.0.2 : BV:32
#4 : input.src.exreg.0.7 : BV:32
#5 : 4 : INT
#6 : 0 : BOOL
#7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#main:163
#=etfg_insn
#=tfg_edge
#L41%3%1 => L41%4%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.llvm-mem
#1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
#2 : mlvar.llvm.0 : MEMLABEL
#3 : input.src.exreg.0.12 : BV:32
#4 : input.src.exreg.0.5 : BV:32
#5 : 4 : INT
#6 : 0 : BOOL
#7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
#=pcrel_val
#1
#=pcrel_tag
#tag_var
#=comment
#main:164
#--
#live : exr0.1[0xffffffff], exr0.3[0xffffffff], exr0.5[0xffffffff],# exr0.1[0xffffffff], exr0.3[0xffffffff], exr0.7[0xffffffff],#
#memlive : true
#--
#in_tmap:
#exvr0.3 : exvr0.3D
#exvr0.7 : exvr0.2D
#exvr0.11 : exvr0.4D
#out_tmap.0:
#exvr0.1 : exvr0.4D
#exvr0.3 : exvr0.3D
#exvr0.5 : exvr0.5D
#out_tmap.1:
#exvr0.1 : exvr0.4D
#exvr0.3 : exvr0.3D
#exvr0.7 : exvr0.2D
#--
#fixed_reg_mappings
#--
#.i0: leal %exvr4.0w:0x1(%exvr0.4d),%exvr0.4d #
#.i1: movl %exvr4.0w:(%exvr0.3d,%exvr0.4d,4),%exvr0.5d #
#.i2: cmpl %exvr0.5d,%exvr0.2d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
#.i3: jle .NEXTPC0x0 #
#.i4: movl %exvr0.2d,%exvr4.0w:(%exvr0.3d,%exvr0.4d,4) #
#.i5: movl %exvr0.5d,%exvr4.0w:0xfffffffc(%exvr0.3d,%exvr0.4d,4) #
#.i6: jmp .NEXTPC0x1 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L1%1%100003 => L1%1%100004
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : 0 : BV:32
#2 : 1 : BV:32
#3 : const.0 : BV:32
#4 : bvmul(2, 3) : BV:32
#5 : bvadd(1, 4) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#wordcode_interp:2
#=etfg_insn
#=tfg_edge
#L1%1%100004 => L1%1%100005
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.1
#1 : input.src.exreg.0.0 : BV:32
#2 : 0 : BV:32
#3 : 4 : BV:32
#4 : bvmul(2, 3) : BV:32
#5 : bvadd(1, 4) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#wordcode_interp:3
#=etfg_insn
#=tfg_edge
#L1%1%100005 => L1%1%100006
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.2
#1 : const.1 : BV:32
#2 : input.src.exreg.0.1 : BV:32
#3 : bvadd(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#wordcode_interp:4
#--
#live : exr0.2[0xffffffff],#
#memlive : false
#--
#in_tmap:
#out_tmap.0:
#exvr0.2 : exvr0.0D
#--
#fixed_reg_mappings
#--
#.i0: movl $C1+1*C0, %exvr0.0d #
#.i1: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L2%1%1 => L2%1%100003
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : 0 : BV:32
#2 : 1 : BV:32
#3 : const.0 : BV:32
#4 : bvmul(2, 3) : BV:32
#5 : bvadd(1, 4) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_const
#=comment
#wordcode_interp:12
#=etfg_insn
#=tfg_edge
#L2%1%100003 => L2%1%100004
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.1
#1 : input.src.exreg.0.2 : BV:32
#2 : input.src.exreg.0.0 : BV:32
#3 : bvadd(1, 2) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#wordcode_interp:13
#--
#live : exr0.1[0xffffffff], exr0.2[0xffffffff],#
#memlive : false
#--
#in_tmap:
#exvr0.2 : exvr0.2D
#out_tmap.0:
#exvr0.1 : exvr0.1D
#exvr0.2 : exvr0.2D
#--
#fixed_reg_mappings
#--
#.i0: leal %exvr4.0w:C0(%exvr0.2d),%exvr0.1d #
#.i1: jmp .NEXTPC0x0 #
#==
#
#ENTRY:
#=etfg_insn
#=tfg_edge
#L0%1%1 => L0%2%1
#=tfg_edge_EdgeCond:
#1 : 1 : BOOL
#=tfg_edge_StateTo:
#=src.exreg.0.0
#1 : input.src.exreg.0.1 : BV:32
#2 : 7 : INT
#3 : 0 : INT
#4 : bvextract(1, 2, 3) : BV:8
#5 : 24 : INT
#6 : bvzero_ext(4, 5) : BV:32
#=pcrel_val
#0
#=pcrel_tag
#tag_var
#=comment
#zext8:1
#--
#live : exr0.0[0xffffffff], exr0.1[0xff],#
#memlive : false
#--
#in_tmap:
#exvr0.1 : exvr0.0D
#out_tmap.0:
#exvr0.0 : exvr0.1D
#exvr0.1 : exvr0.0D
#--
#fixed_reg_mappings
#--
#.i0: movzbl %exvr0.0b,%exvr0.1d #
#.i1: jmp .NEXTPC0x0 #
#==
