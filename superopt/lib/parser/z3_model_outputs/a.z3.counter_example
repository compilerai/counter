sat
(model 
  (define-fun local.1 () (_ BitVec 32)
    #x00000002)
  (define-fun local.2 () (_ BitVec 32)
    #x00000001)
  (define-fun input.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun local.3 () (_ BitVec 32)
    #x00000000)
  (define-fun input.mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!4))
  (define-fun input.reg.0.5 () (_ BitVec 32)
    #x10000000)
  (define-fun input.llvm-%local3 () (_ BitVec 32)
    #x00000000)
  (define-fun input.llvm-%1 () (_ BitVec 32)
    #x10000000)
  (define-fun input_stack_pointer_const () (_ BitVec 32)
    (let ((a!1 (concat (select (ite (= (_ as-array k!0) (_ as-array k!4))
                                (_ as-array k!12)
                                (_ as-array k!1))
                           #x00000004)
                   (select (ite (= (_ as-array k!0) (_ as-array k!4))
                                (_ as-array k!12)
                                (_ as-array k!1))
                           #x00000003)
                   (select (ite (= (_ as-array k!0) (_ as-array k!4))
                                (_ as-array k!12)
                                (_ as-array k!1))
                           #x00000002)
                   (select (ite (= (_ as-array k!0) (_ as-array k!4))
                                (_ as-array k!12)
                                (_ as-array k!1))
                           #x00000001))))
  (bvadd #x00000004 a!1)))
  (define-fun input.llvm-%local1 () (_ BitVec 32)
    #x00000002)
  (define-fun input.llvm-%ptr () (_ BitVec 32)
    #x00000001)
  (define-fun input.llvm-%local0 () (_ BitVec 32)
    (concat (select (ite (= (_ as-array k!0) (_ as-array k!4))
                     (_ as-array k!12)
                     (_ as-array k!1))
                #x00000004)
        (select (ite (= (_ as-array k!0) (_ as-array k!4))
                     (_ as-array k!12)
                     (_ as-array k!1))
                #x00000003)
        (select (ite (= (_ as-array k!0) (_ as-array k!4))
                     (_ as-array k!12)
                     (_ as-array k!1))
                #x00000002)
        (select (ite (= (_ as-array k!0) (_ as-array k!4))
                     (_ as-array k!12)
                     (_ as-array k!1))
                #x00000001)))
  (define-fun local.0 () (_ BitVec 32)
    (concat (select (ite (= (_ as-array k!0) (_ as-array k!4))
                     (_ as-array k!12)
                     (_ as-array k!1))
                #x00000004)
        (select (ite (= (_ as-array k!0) (_ as-array k!4))
                     (_ as-array k!12)
                     (_ as-array k!1))
                #x00000003)
        (select (ite (= (_ as-array k!0) (_ as-array k!4))
                     (_ as-array k!12)
                     (_ as-array k!1))
                #x00000002)
        (select (ite (= (_ as-array k!0) (_ as-array k!4))
                     (_ as-array k!12)
                     (_ as-array k!1))
                #x00000001)))
  (define-fun k!0 ((x!1 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!1 #x00000000) #x00
      #x00))
  (define-fun memlabels_uif ((x!1 (_ BitVec 32))) (_ BitVec 4)
    (ite (= x!1 #x00000002) #x3
    (ite (= x!1 #x01808002) #x2
    (ite (= x!1 #x10000000) #x0
    (ite (= x!1 #x00000001) #x4
    (ite (= x!1 #x00000000) #x8
      #x3))))))
  (define-fun k!5 ((x!1 (_ BitVec 32))) (_ BitVec 8)
    #x80)
  (define-fun k!10 ((x!1 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!1 #x00000003) #x00
    (ite (= x!1 #x00000005) #x00
    (ite (= x!1 #x00000002) #x00
    (ite (= x!1 #x00000004) #x00
      #x80)))))
  (define-fun k!4 ((x!1 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!1 #x00000000) #x01
      #x80))
  (define-fun k!9 ((x!1 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!1 #x00000003) #x00
    (ite (= x!1 #x00000004) #x00
    (ite (= x!1 #x00000002) #x00
    (ite (= x!1 #x00000005) #x00
      #x80)))))
  (define-fun k!3 ((x!1 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!1 #x01808004) #x00
    (ite (= x!1 #x01808003) #x00
    (ite (= x!1 #x01808002) #x00
    (ite (= x!1 #x01808005) #x00
      #x80)))))
  (define-fun k!8 ((x!1 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!1 #x01808004) #x00
    (ite (= x!1 #x01808003) #x00
    (ite (= x!1 #x01808005) #x00
    (ite (= x!1 #x01808002) #x00
      #x80)))))
  (define-fun memmask_uif ((x!1 (Array (_ BitVec 32) (_ BitVec 8)))
   (x!2 (_ BitVec 4))) (Array (_ BitVec 32) (_ BitVec 8))
    (ite (and (= x!1 (_ as-array k!0)) (= x!2 #x4)) (_ as-array k!1)
    (ite (and (= x!1 (_ as-array k!0)) (= x!2 #x3)) (_ as-array k!2)
    (ite (and (= x!1 (_ as-array k!0)) (= x!2 #x2)) (_ as-array k!3)
    (ite (and (= x!1 (_ as-array k!0)) (= x!2 #x0)) (_ as-array k!5)
    (ite (and (= x!1 (_ as-array k!4)) (= x!2 #x0)) (_ as-array k!5)
    (ite (and (= x!1 (_ as-array k!4)) (= x!2 #x4)) (_ as-array k!12)
      (_ as-array k!5))))))))
  (define-fun k!2 ((x!1 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!1 #x00000003) #x00
    (ite (= x!1 #x00000005) #x00
    (ite (= x!1 #x00000002) #x00
    (ite (= x!1 #x00000004) #x00
      #x80)))))
  (define-fun k!7 ((x!1 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!1 #x01808004) #x00
    (ite (= x!1 #x01808003) #x00
    (ite (= x!1 #x01808002) #x00
    (ite (= x!1 #x01808005) #x00
      #x80)))))
  (define-fun k!12 ((x!1 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!1 #x00000003) #x00
    (ite (= x!1 #x00000004) #x00
    (ite (= x!1 #x00000002) #x00
    (ite (= x!1 #x00000001) #x00
      #x80)))))
  (define-fun k!1 ((x!1 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!1 #x00000003) #x80
    (ite (= x!1 #x00000001) #x02
    (ite (= x!1 #x00000002) #x80
    (ite (= x!1 #x00000004) #x01
      #x00)))))
  (define-fun k!6 ((x!1 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!1 #x01808004) #x00
    (ite (= x!1 #x01808003) #x00
    (ite (= x!1 #x01808002) #x00
    (ite (= x!1 #x01808005) #x00
      #x80)))))
  (define-fun k!11 ((x!1 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!1 #x00000003) #x00
    (ite (= x!1 #x00000005) #x00
    (ite (= x!1 #x00000002) #x00
    (ite (= x!1 #x00000004) #x00
      #x80)))))
)
