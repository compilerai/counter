sat
(model 
  (define-fun local.1 () (_ BitVec 32)
    #x00000008)
  (define-fun local.2 () (_ BitVec 32)
    #x10000000)
  (define-fun local.0 () (_ BitVec 32)
    #x04000000)
  (define-fun input.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun local.3 () (_ BitVec 32)
    #x00000000)
  (define-fun input.mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!5))
  (define-fun input.llvm-%22 () (_ BitVec 32)
    #x00000000)
  (define-fun input.llvm-%23 () Bool
    false)
  (define-fun input.llvm-%30 () (_ BitVec 32)
    #x00000000)
  (define-fun input.llvm-%1 () (_ BitVec 32)
    #x04000000)
  (define-fun input_llvm-%file_const () (_ BitVec 32)
    #x00000000)
  (define-fun input.llvm-%4 () (_ BitVec 32)
    #x00000000)
  (define-fun input_llvm-%num_const () (_ BitVec 32)
    (concat (select (ite (= (_ as-array k!0) (_ as-array k!5))
                     (_ as-array k!6)
                     (_ as-array k!3))
                #x04000003)
        (select (ite (= (_ as-array k!0) (_ as-array k!5))
                     (_ as-array k!6)
                     (_ as-array k!3))
                #x04000002)
        (select (ite (= (_ as-array k!0) (_ as-array k!5))
                     (_ as-array k!6)
                     (_ as-array k!3))
                #x04000001)
        (select (ite (= (_ as-array k!0) (_ as-array k!5))
                     (_ as-array k!6)
                     (_ as-array k!3))
                #x04000000)))
  (define-fun input.llvm-%3 () (_ BitVec 32)
    #x10000000)
  (define-fun input.llvm-%ratio () (_ BitVec 32)
    #x00000000)
  (define-fun input.llvm-%2 () (_ BitVec 32)
    #x00000008)
  (define-fun input.llvm-%5 () Bool
    true)
  (define-fun input_llvm-%den_const () (_ BitVec 32)
    #x00000000)
  (define-fun k!0 ((x!1 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!1 #x00000000) #x00
      #x00))
  (define-fun memlabels_uif ((x!1 (_ BitVec 32))) (_ BitVec 4)
    (ite (= x!1 #x00000008) #x4
    (ite (= x!1 #x04000000) #x3
    (ite (= x!1 #x10000000) #x5
    (ite (= x!1 #x00000000) #x6
      #x4)))))
  (define-fun k!5 ((x!1 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!1 #x00000000) #x01
      #x01))
  (define-fun memmask_uif ((x!1 (Array (_ BitVec 32) (_ BitVec 8)))
   (x!2 (_ BitVec 4))) (Array (_ BitVec 32) (_ BitVec 8))
    (ite (and (= x!1 (_ as-array k!0)) (= x!2 #x5)) (_ as-array k!1)
    (ite (and (= x!1 (_ as-array k!0)) (= x!2 #x4)) (_ as-array k!2)
    (ite (and (= x!1 (_ as-array k!0)) (= x!2 #x3)) (_ as-array k!3)
    (ite (and (= x!1 (_ as-array k!0)) (= x!2 #x6)) (_ as-array k!4)
    (ite (and (= x!1 (_ as-array k!5)) (= x!2 #x3)) (_ as-array k!6)
      (_ as-array k!1)))))))
  (define-fun k!2 ((x!1 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!1 #x0000000a) #x00
    (ite (= x!1 #x0000000b) #x00
    (ite (= x!1 #x00000009) #x00
    (ite (= x!1 #x00000008) #x00
      #x00)))))
  (define-fun k!4 ((x!1 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!1 #x00000003) #x00
    (ite (= x!1 #x00000002) #x00
    (ite (= x!1 #x00000000) #x00
    (ite (= x!1 #x00000001) #x00
      #x00)))))
  (define-fun k!1 ((x!1 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!1 #x10000000) #x00
      #x00))
  (define-fun k!6 ((x!1 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!1 #x04000001) #x01
    (ite (= x!1 #x04000000) #x80
    (ite (= x!1 #x04000002) #x01
    (ite (= x!1 #x04000003) #x00
      #x01)))))
  (define-fun k!3 ((x!1 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!1 #x04000001) #x00
    (ite (= x!1 #x04000002) #x00
    (ite (= x!1 #x04000000) #x00
    (ite (= x!1 #x04000003) #x10
      #x00)))))
)
