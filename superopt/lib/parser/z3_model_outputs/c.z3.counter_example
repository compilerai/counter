sat
(model 
  (define-fun local.1 () (_ BitVec 32)
    #x00000008)
  (define-fun local.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun local.5 () (_ BitVec 32)
    #x0000000c)
  (define-fun local.2 () (_ BitVec 32)
    #x01000000)
  (define-fun local.4 () (_ BitVec 32)
    #x00000004)
  (define-fun input.mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!6))
  (define-fun local.3 () (_ BitVec 32)
    #x00000002)
  (define-fun input.llvm-%7 () (_ BitVec 32)
    (concat (select (ite (= (_ as-array k!0) (_ as-array k!6))
                     (_ as-array k!13)
                     (_ as-array k!12))
                #x00000003)
        (select (ite (= (_ as-array k!0) (_ as-array k!6))
                     (_ as-array k!13)
                     (_ as-array k!12))
                #x00000002)
        (select (ite (= (_ as-array k!0) (_ as-array k!6))
                     (_ as-array k!13)
                     (_ as-array k!12))
                #x00000001)
        (select (ite (= (_ as-array k!0) (_ as-array k!6))
                     (_ as-array k!13)
                     (_ as-array k!12))
                #x00000000)))
  (define-fun input.llvm-%3 () (_ BitVec 32)
    #x01000000)
  (define-fun input.llvm-%1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.llvm-%j () (_ BitVec 32)
    #x0000000c)
  (define-fun input.llvm-%i () (_ BitVec 32)
    #x00000004)
  (define-fun input_llvm-%a_const () (_ BitVec 32)
    #x00000001)
  (define-fun input.llvm-%2 () (_ BitVec 32)
    #x00000008)
  (define-fun input.llvm-%11 () (_ BitVec 32)
    #x00000000)
  (define-fun input.llvm-%31 () (_ BitVec 32)
    #x00000000)
  (define-fun input.llvm-%4 () (_ BitVec 32)
    #x00000002)
  (define-fun input_llvm-%b_const () (_ BitVec 32)
    #x00000001)
  (define-fun input.llvm-%12 () (_ BitVec 32)
    #x01020180)
  (define-fun input_llvm-%m_const () (_ BitVec 32)
    #x01020180)
  (define-fun input.llvm-%8 () Bool
    (let ((a!1 (concat (select (ite (= (_ as-array k!0) (_ as-array k!6))
                                (_ as-array k!13)
                                (_ as-array k!12))
                           #x00000003)
                   (select (ite (= (_ as-array k!0) (_ as-array k!6))
                                (_ as-array k!13)
                                (_ as-array k!12))
                           #x00000002)
                   (select (ite (= (_ as-array k!0) (_ as-array k!6))
                                (_ as-array k!13)
                                (_ as-array k!12))
                           #x00000001)
                   (select (ite (= (_ as-array k!0) (_ as-array k!6))
                                (_ as-array k!13)
                                (_ as-array k!12))
                           #x00000000))))
  (not (bvsle a!1 #x00000000))))
  (define-fun input_llvm-%n_const () (_ BitVec 32)
    (concat (select (ite (= (_ as-array k!0) (_ as-array k!6))
                     (_ as-array k!13)
                     (_ as-array k!12))
                #x00000003)
        (select (ite (= (_ as-array k!0) (_ as-array k!6))
                     (_ as-array k!13)
                     (_ as-array k!12))
                #x00000002)
        (select (ite (= (_ as-array k!0) (_ as-array k!6))
                     (_ as-array k!13)
                     (_ as-array k!12))
                #x00000001)
        (select (ite (= (_ as-array k!0) (_ as-array k!6))
                     (_ as-array k!13)
                     (_ as-array k!12))
                #x00000000)))
  (define-fun input.llvm-%6 () (_ BitVec 32)
    #x00000000)
  (define-fun input.reg.0.4 () (_ BitVec 32)
    #x00000000)
  (define-fun input.llvm-%13 () Bool
    true)
  (define-fun k!0 ((x!1 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!1 #x00000000) #x00
      #x00))
  (define-fun memlabels_uif ((x!1 (_ BitVec 32))) (_ BitVec 5)
    (ite (= x!1 #x00000000) #b00011
    (ite (= x!1 #x00000002) #b00110
    (ite (= x!1 #x00000008) #b00100
    (ite (= x!1 #x01000000) #b00101
    (ite (= x!1 #x0000000c) #b01000
    (ite (= x!1 #x00000004) #b00111
    (ite (= x!1 #x00000001) #b00000
      #b00011))))))))
  (define-fun k!5 ((x!1 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!1 #x0000000c) #x00
    (ite (= x!1 #x0000000f) #x00
    (ite (= x!1 #x0000000e) #x00
    (ite (= x!1 #x0000000d) #x00
      #x00)))))
  (define-fun k!10 ((x!1 (_ BitVec 32))) (_ BitVec 8)
    #x02)
  (define-fun k!4 ((x!1 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!1 #x0000000c) #x00
    (ite (= x!1 #x0000000f) #x00
    (ite (= x!1 #x0000000d) #x00
    (ite (= x!1 #x0000000e) #x00
      #x00)))))
  (define-fun k!9 ((x!1 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!1 #x00000003) #x00
    (ite (= x!1 #x00000002) #x01
    (ite (= x!1 #x00000005) #x00
    (ite (= x!1 #x00000004) #x00
      #x02)))))
  (define-fun k!3 ((x!1 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!1 #x0000000c) #x00
    (ite (= x!1 #x0000000f) #x00
    (ite (= x!1 #x0000000d) #x00
    (ite (= x!1 #x0000000e) #x00
      #x00)))))
  (define-fun k!8 ((x!1 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!1 #x00000007) #x00
    (ite (= x!1 #x00000006) #x00
    (ite (= x!1 #x00000005) #x00
    (ite (= x!1 #x00000004) #x00
      #x02)))))
  (define-fun k!13 ((x!1 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!1 #x00000003) #x00
    (ite (= x!1 #x00000002) #x00
    (ite (= x!1 #x00000000) #x00
    (ite (= x!1 #x00000001) #x00
      #x02)))))
  (define-fun k!2 ((x!1 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!1 #x0000000c) #x00
    (ite (= x!1 #x0000000f) #x00
    (ite (= x!1 #x0000000d) #x00
    (ite (= x!1 #x0000000e) #x00
      #x00)))))
  (define-fun k!7 ((x!1 (_ BitVec 32))) (_ BitVec 8)
    #x02)
  (define-fun k!12 ((x!1 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!1 #x00000003) #x01
    (ite (= x!1 #x00000002) #x01
    (ite (= x!1 #x00000000) #x01
    (ite (= x!1 #x00000001) #x01
      #x02)))))
  (define-fun k!1 ((x!1 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!1 #x0000000a) #x02
    (ite (= x!1 #x00000008) #x80
    (ite (= x!1 #x00000009) #x01
    (ite (= x!1 #x0000000b) #x01
      #x00)))))
  (define-fun memmask_uif ((x!1 (Array (_ BitVec 32) (_ BitVec 8)))
   (x!2 (_ BitVec 5))) (Array (_ BitVec 32) (_ BitVec 8))
    (ite (and (= x!1 (_ as-array k!0)) (= x!2 #b00100)) (_ as-array k!1)
    (ite (and (= x!1 (_ as-array k!0)) (= x!2 #b01000)) (_ as-array k!2)
    (ite (and (= x!1 (_ as-array k!0)) (= x!2 #b00000)) (_ as-array k!7)
    (ite (and (= x!1 (_ as-array k!6)) (= x!2 #b00000)) (_ as-array k!7)
    (ite (and (= x!1 (_ as-array k!0)) (= x!2 #b00111)) (_ as-array k!8)
    (ite (and (= x!1 (_ as-array k!0)) (= x!2 #b00110)) (_ as-array k!9)
    (ite (and (= x!1 (_ as-array k!0)) (= x!2 #b00010)) (_ as-array k!10)
    (ite (and (= x!1 (_ as-array k!6)) (= x!2 #b00010)) (_ as-array k!10)
    (ite (and (= x!1 (_ as-array k!0)) (= x!2 #b00101)) (_ as-array k!11)
    (ite (and (= x!1 (_ as-array k!0)) (= x!2 #b00011)) (_ as-array k!12)
    (ite (and (= x!1 (_ as-array k!6)) (= x!2 #b00011)) (_ as-array k!13)
      (_ as-array k!7)))))))))))))
  (define-fun k!6 ((x!1 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!1 #x00000000) #x01
      #x02))
  (define-fun k!11 ((x!1 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!1 #x01000003) #x00
    (ite (= x!1 #x01000002) #x00
    (ite (= x!1 #x01000001) #x00
    (ite (= x!1 #x01000000) #x01
      #x02)))))
)
